<div id="app" class="horizontal-center m-2">
    <table class="w-100">
        <tr>
            <td class="text-left p-33"><b>Score: {{score}}</b></td>
            <td class="text-center p-33"><b>Guesses: {{guesses}}</b></td>
            <td class="text-right p-33"><b>Question: {{currentQuestion + 1}}</b> </td>
        </tr>

    </table>

    <h3 class="text-center m-3">{{question[currentQuestion].questionText}}</h3>
    <center>
        <div class="center-block input-group mb-3">
            <input type="text" name="name" value="" class="radius mr-4" v-model="answer" v-on:keyup.enter="Submit" />
            <button class="btn btn-dark" v-on:click="Submit">Confirm</button>
        </div>
    </center>
    <div class="horizontal-center">
        <table class="w-100 horizontal-center">
            <tr v-for="index in 5" class="text-center">
                <td class="unanswered text-center">
                    <b v-if="answers.length == 10 && answered[index-1]">{{answers[index-1].answerText}}</b>
                    <b v-else>{{index}}</b>
                </td>
                <td class="text-center unanswered">
                    <b v-if="answers.length == 10 && answered[index+4]">{{answers[index+4].answerText}}</b>
                    <b v-else>{{index+5}}</b>
                </td>
            </tr>
        </table>
    </div>
    <center>
        <div class="mt-3">
            <button class="btn btn-dark" v-if="guessed" v-on:click="ShowAllQuestions">Show Answers</button>
            <button class="btn btn-dark" v-if="guessed" v-on:click="NextQuestion">Next Question</button>
        </div>
    </center>
</div>


<script>
    var app = new Vue({
        el: "#app",
        data: {
            score: 0,
            currentQuestion: 0,
            question: [{
                questionText: "",
                category: {
                    name: "",
                    id: ""
                },
                answers: {
                    answerText: ""
                }
            }],

            answered: [false, false, false, false, false,
                false, false, false, false, false],
            answers: [],
            answer: "",
            guesses: 0,
            guessed: false
        },
        created: function () {
            axios
                .get(RandomQuestionListUrl)
                .then(response => this.question = response.data)

        },
        methods: {
            ShowAllQuestions: function () {
                console.log("a")
                this.answers = [];
                for (var i = 1; i < 11; i++) {
                    this.answers.push(this.question[this.currentQuestion].answers.filter(function (el) {
                        return el.points == i
                    })[0]);
                }
                console.log(this.answers)
                this.answered = [true, true, true, true, true,
                    true, true, true, true, true]

            },
            ShowGuessedAnswers: function () {
                this.answers = [];
                for (var i = 0; i < 10; i++) {
                    if (this.answered[i]) {
                        this.answers.push(this.question[this.currentQuestion].answers.filter(function (el) {
                            return el.points == i + 1
                        })[0]);
                    } else {
                        this.answers.push({
                            answerText: i + 1
                        });
                    }
                }
            },
            Submit: function () {
                let correctAnswer = this.question[this.currentQuestion].answers.filter(x => //Is there same value with toUpper() and removeSpaces()
                    x.answerText.toUpperCase().replace(/ /g, '') == this.answer.toUpperCase().replace(/ /g, ''));

                if (correctAnswer.length == 1 && this.answered[correctAnswer[0].points - 1] != true) {
                    this.score += correctAnswer[0].points
                    this.answered[correctAnswer[0].points - 1] = true
                    this.ShowGuessedAnswers();
                }

                this.answer = ""
                this.guessed = true
                this.guesses++
            },
            NextQuestion: function () {
                this.answered = [false, false, false, false, false,
                    false, false, false, false, false]
                this.guessed = false
                this.answer = ""
                this.currentQuestion++;
            }
        },
    });


</script>